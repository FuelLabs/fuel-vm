name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose -- --check

  check-clippy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Check Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --verbose -- -D warnings

  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose
        env:
          RUSTFLAGS: '-D warnings'

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

      - name: Run helper tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --package fuel-merkle-test-helpers

  build-and-test-no-std:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

        # Using thumbv6m-none-eabi as ARMv6-M arbitrary common choice for a bare-minimum target.
        # More info: https://docs.rs/cortex-m-rt/latest/cortex_m_rt/
        #
        # Can be replaced by other targets that guarantee bare-minimum no-std
      - name: Install toolchain no-std
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv6m-none-eabi
          override: true

      - name: Check no-std
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose --target thumbv6m-none-eabi --no-default-features
        env:
          RUSTFLAGS: '-D warnings'

      - name: Run tests no-std
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --no-default-features

  publish:
    needs: [
      check-formatting,
      check-clippy,
      build-and-test,
      build-and-test-no-std
    ]
    # Only do this job if publishing a release
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Verify tag version
        run: |
          cargo install toml-cli
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} Cargo.toml

      - name: Publish crate
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
