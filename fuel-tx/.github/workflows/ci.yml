name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true


    # Using thumbv6m-none-eabi as ARMv6-M arbitrary common choice for a bare-minimum target.
    # More info: https://docs.rs/cortex-m-rt/latest/cortex_m_rt/
    #
    # Can be replaced by other targets that guarantee bare-minimum no-std
    - name: Install toolchain no-std
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: thumbv6m-none-eabi
        override: true

    - name: Install rustfmt
      run: rustup component add rustfmt

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all --verbose -- --check

    - name: Check Clippy Lints
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --verbose --all-targets

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose

    - name: Build no-std
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --target thumbv6m-none-eabi --no-default-features

    - name: Build no-std alloc
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --target thumbv6m-none-eabi --no-default-features --features alloc

    - name: Build no-std serde
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --target thumbv6m-none-eabi --no-default-features --features serde-types-minimal

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --all --all-features

    - name: Run tests no-std
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --no-default-features

    - name: Run tests serde no-std
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --no-default-features --features serde-types-minimal

    - name: Run tests alloc
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --no-default-features --features alloc

    - name: Run tests serde
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --features serde-types

  publish:
    # Only do this job if publishing a release
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Verify tag version
        run: |
          curl -sSLf "$(curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest | grep browser_download_url | grep linux_amd64 | cut -d\" -f 4)" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} Cargo.toml

      - name: Publish crate
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
